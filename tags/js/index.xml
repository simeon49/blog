<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Js on Simeon&#39;s blog</title>
    <link>https://simeon49.github.io/blog/tags/js/</link>
    <description>Recent content in Js on Simeon&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans-CN</language>
    <lastBuildDate>Wed, 16 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://simeon49.github.io/blog/tags/js/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>浏览器缓存</title>
      <link>https://simeon49.github.io/blog/posts/2019-01-16-%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BC%93%E5%AD%98/</link>
      <pubDate>Wed, 16 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://simeon49.github.io/blog/posts/2019-01-16-%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BC%93%E5%AD%98/</guid>
      <description>什么是浏览器缓存 如今web的应用可以说种类丰富体积庞大, 通常一个入口页面就需要加载非常多的资源, 如果每一次打开页面都从服务器上获取这些资源无</description>
    </item>
    
    <item>
      <title>一道神奇的前端附加题</title>
      <link>https://simeon49.github.io/blog/posts/2019-01-15-%E4%B8%80%E9%81%93%E7%A5%9E%E5%A5%87%E7%9A%84%E5%89%8D%E7%AB%AF%E9%99%84%E5%8A%A0%E9%A2%98/</link>
      <pubDate>Tue, 15 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://simeon49.github.io/blog/posts/2019-01-15-%E4%B8%80%E9%81%93%E7%A5%9E%E5%A5%87%E7%9A%84%E5%89%8D%E7%AB%AF%E9%99%84%E5%8A%A0%E9%A2%98/</guid>
      <description>在知乎上有一篇文章 文中提给了一道前端附加题, 问题是在一个闭包里有一个对象&amp;rdquo;o&amp;rdquo; 它有N多属性, 在不修改下面代码的前提</description>
    </item>
    
    <item>
      <title>虚拟DOM</title>
      <link>https://simeon49.github.io/blog/posts/2019-01-14-%E8%99%9A%E6%8B%9Fdom/</link>
      <pubDate>Mon, 14 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://simeon49.github.io/blog/posts/2019-01-14-%E8%99%9A%E6%8B%9Fdom/</guid>
      <description>什么是虚拟DOM 前端的DOM操作是一个非常消耗性能的事, 因为每一个DOM元素对象拥有很多的属性 const divDom = document.createElement(&#39;div&#39;); for (let key in divDom) { console.log(key); // 大概可以打印出200+</description>
    </item>
    
    <item>
      <title>js中的神奇方法Object.defineProperty</title>
      <link>https://simeon49.github.io/blog/posts/2018-12-28-js%E4%B8%AD%E7%9A%84object.defineproperty/</link>
      <pubDate>Fri, 28 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://simeon49.github.io/blog/posts/2018-12-28-js%E4%B8%AD%E7%9A%84object.defineproperty/</guid>
      <description>一年多前开始接触前端,从用原生(html+js+css)的简单页面到使用框架(jquery, vue, angular, ionic)构建的稍微复杂的前端页面/app</description>
    </item>
    
    <item>
      <title>使用web_API处理图片</title>
      <link>https://simeon49.github.io/blog/posts/2018-12-28-%E4%BD%BF%E7%94%A8web_api%E5%A4%84%E7%90%86%E5%9B%BE%E7%89%87/</link>
      <pubDate>Mon, 24 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://simeon49.github.io/blog/posts/2018-12-28-%E4%BD%BF%E7%94%A8web_api%E5%A4%84%E7%90%86%E5%9B%BE%E7%89%87/</guid>
      <description>国外有一个人写了一篇文章, 大致内容就是通过将图片红,绿,蓝,三色的数据分别进行滤波得到新的图片,在这篇文章中我挑重点解释一下原文作者的意图 直</description>
    </item>
    
  </channel>
</rss>